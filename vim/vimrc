"------------------------------------------------------------------------------
" Vundle
"------------------------------------------------------------------------------

set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

Plugin 'Shougo/neocomplete.vim'
Plugin 'Shougo/neosnippet-snippets'
Plugin 'Shougo/neosnippet.vim'
Plugin 'Shougo/unite.vim'
Plugin 'Shougo/vimproc.vim'
Plugin 'Valloric/MatchTagAlways'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'airblade/vim-gitgutter'
Plugin 'arnaud-lb/vim-php-namespace'
Plugin 'danro/rename.vim'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'evidens/vim-twig'
Plugin 'fatih/vim-go'
Plugin 'flazz/vim-colorschemes'
Plugin 'gioele/vim-autoswap'
Plugin 'itchyny/lightline.vim'
Plugin 'majutsushi/tagbar'
Plugin 'matze/vim-move'
Plugin 'mkusher/padawan.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'shime/vim-livedown'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'

call vundle#end()

"------------------------------------------------------------------------------
" General
"------------------------------------------------------------------------------

syntax on

set mouse=a
set nocompatible

set backspace=indent,eol,start

filetype on
filetype plugin on
filetype plugin indent on

set tabstop=4
set shiftwidth=4
set smarttab
set expandtab

"------------------------------------------------------------------------------
" Wrap settings
"------------------------------------------------------------------------------

set nowrap

"------------------------------------------------------------------------------
" Look and Feel
"------------------------------------------------------------------------------

" Remove right hand and left hand scrollbars
set guioptions-=r
set go-=L

set number

set background=dark
colorscheme hybrid_material

set guifont=Sauce\ Code\ Powerline\ Light:h11
let g:Powerline_symbols = 'fancy'

set list lcs=tab:\┆·
highlight SpecialKey ctermfg=59 guifg=#65737e

"------------------------------------------------------------------------------
" Tags
"------------------------------------------------------------------------------

set tags=tags,./tags

" Verical ctag split instead of horizontal
function! VerticalCTagSplit()
  let err=0
  try
    vsplit
    execute "tag " . expand("<cword>")
  catch
    let err=1
    quit
  endtry
  if !err
    :NERDTreeFind
  endif
endfunction

nnoremap <c-]> :call VerticalCTagSplit()<CR>

"------------------------------------------------------------------------------
" Lightline
"------------------------------------------------------------------------------

" Hide default vim "-- INSERT --" and other modes
set noshowmode

" Preferences
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'fugitive', 'filename' ] ]
      \ },
      \ 'component_function': {
      \   'fugitive': 'LightLineFugitive',
      \   'readonly': 'LightLineReadonly',
      \   'modified': 'LightLineModified',
      \   'filename': 'LightLineFilename'
      \ },
      \ 'separator': { 'left': '', 'right': '' },
      \ 'subseparator': { 'left': '', 'right': '' }
      \ }

function! LightLineModified()
  if &filetype == "help"
    return ""
  elseif &modified
    return "+"
  elseif &modifiable
    return ""
  else
    return ""
  endif
endfunction

function! LightLineReadonly()
  if &filetype == "help"
    return ""
  elseif &readonly
    return ""
  else
    return ""
  endif
endfunction

function! LightLineFugitive()
  if exists("*fugitive#head")
    let branch = fugitive#head()
    return branch !=# '' ? ' '.branch : ''
  endif
  return ''
endfunction

function! LightLineFilename()
  return ('' != LightLineReadonly() ? LightLineReadonly() . ' ' : '') .
       \ ('' != expand('%:t') ? expand('%:t') : '[No Name]') .
       \ ('' != LightLineModified() ? ' ' . LightLineModified() : '')
endfunction

"------------------------------------------------------------------------------
" Swap/Backup Files
"------------------------------------------------------------------------------

set backup
set backupdir=~/.vim/backup/
set directory=~/.vim/swap/

"------------------------------------------------------------------------------
" Nerdtree
"------------------------------------------------------------------------------

nmap <C-b> :NERDTreeToggle<cr>
let NERDTreeShowHidden=1
let NERDTreeMouseMode=2
let NERDTreeKeepTreenInNewTab=1
let NERDTreeIgnore=[
    \ '.DS_Store',
    \ '.git/*[[dir]]',
    \ 'node_modules',
    \ 'bower_components',
    \ '.sass-cache',
    \ '.vagrant',
    \ '.padawan'
    \ ]

" Open Nerdtree on startup when no file has been specified
autocmd VimEnter * if !argc() | NERDTree | endif

" Locate file in Nerdtree hierarchy
map <leader>T :NERDTreeFind<cr>

let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ "Unknown"   : "?"
    \ }

"------------------------------------------------------------------------------
" NeoComplete
"------------------------------------------------------------------------------

let g:acp_enableAtStartup = 0

let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1
let g:neocomplete#enable_auto_select = 1

inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"

"------------------------------------------------------------------------------
" Neosnippet
"------------------------------------------------------------------------------

" Don't show preview at the top of the window
set completeopt-=preview

"------------------------------------------------------------------------------
" Tagbar
"------------------------------------------------------------------------------

nmap <F6> :TagbarToggle<CR>

"------------------------------------------------------------------------------
" Vim-go
"------------------------------------------------------------------------------

let g:go_fmt_fail_silently = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1

au FileType go nmap <Leader>i <Plug>(go-info)
au FileType go nmap <Leader>gd <Plug>(go-doc)
au FileType go nmap <Leader>gv <Plug>(go-doc-vertical)
au FileType go nmap <Leader>gb <Plug>(go-doc-browser)
au FileType go nmap <Leader>s <Plug>(go-implements)

"------------------------------------------------------------------------------
" PHP
"------------------------------------------------------------------------------

let g:tagbar_phpctags_memory_limit = '512M'

let $PATH=$PATH . ':' . expand('~/.composer/vendor/bin')

let g:padawan#composer_command = "php /usr/local/bin/composer"
let g:neocomplete#force_omni_input_patterns = {}
let g:neocomplete#force_omni_input_patterns.php =
\ '\h\w*\|[^- \t]->\w*'

"------------------------------------------------------------------------------
" Vim Move
"------------------------------------------------------------------------------
" <C-k> - Move selected lines up
" <C-j> - Move selected lines down
"------------------------------------------------------------------------------

let g:move_key_modifier = 'C'
